{"version":3,"file":"static/js/511.6cfa9279.chunk.js","mappings":"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","sources":["components/PhonebookTitle.jsx","components/contactForm.jsx","components/FilterContact.jsx","components/ContactList.jsx","pages/ContactsPage.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PhonebookTitle = ({title, styles}) => {\n    return (\n        <h1 style={styles}>{title}</h1>\n    )\n};\n\nPhonebookTitle.propTypes = {\n    styles: PropTypes.object,\n    title: PropTypes.string,\n}\n\nexport default PhonebookTitle;","// ContactForm.js\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PhonebookTitle from \"./PhonebookTitle\";\nimport { addContactAsync } from \"redux/contacts/contactSlice\";\nimport Input from '@mui/joy/Input';\nimport Button from '@mui/joy/Button';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  console.log('ContactForm contacts => ', contacts);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"name\") {\n      setName(value);\n    } else if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = (event, token) => {\n    event.preventDefault();\n\n    const contactExists = contacts.some((contact) => contact.name === name.toLowerCase());\n\n    if (contactExists) {\n      alert(`Contact with name \"${name}\" already exists.`);\n      return;\n    }\n\n    const validNamePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n    if (!validNamePattern.test(name)) {\n      alert(\"Please enter a valid name.\");\n      return;\n    }\n\n    const validPhoneNumberPattern = /^(\\+?\\d{1,4}([ .-]?)\\(?\\d{1,3}(\\))?([ .-]?)\\d{1,4}([ .-]?)\\d{1,4}([ .-]?)\\d{1,9})$/;\n\n    if (!validPhoneNumberPattern.test(number)) {\n      alert(\"Please enter a valid phone number.\");\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n    };\n    \n    dispatch(addContactAsync(contact, token));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div className=\"contact_form\">\n      <form onSubmit={onSubmitForm} className=\"form\">\n        <PhonebookTitle\n          title=\"Name\"\n          styles={{\n            fontSize: 20,\n            marginBottom: 0,\n          }}\n        />\n        \n        <Input  \n          color=\"neutral\" size=\"md\" variant=\"solid\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required/>\n\n        <PhonebookTitle\n          title=\"Phone number\"\n          styles={{\n            fontSize: 20,\n            marginBottom: 0,\n          }}\n        />\n        <Input\n          color=\"neutral\" size=\"md\" variant=\"solid\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\\\+?\\\\d{1,4}?[ .-]?\\\\(?\\d{1,3}(\\))?([ .-]?)\\d{1,4}([ .-]?)\\d{1,4}([ .-]?)\\d{1,9}\"\n          required\n        />\n\n        <Button color=\"neutral\" type='submit' style={{marginTop: 15}}>Add Contact</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// FilterContact.jsx\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Input from '@mui/joy/Input';\nimport PhonebookTitle from \"./PhonebookTitle\";\nimport { setFilter } from \"redux/contacts/filterSlice\";\n\nconst FilterContact = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.contacts.filter);\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    dispatch(setFilter(value)); \n  };\n\n  return (\n    <div style={{width: 200, marginLeft: \"auto\", marginRight: \"auto\", marginTop: 20}}>\n\n    <PhonebookTitle title=\"Contacts\" styles={{fontSize: 20, textAlign: \"center \"}}/>\n    <Input\n      color=\"neutral\" size=\"md\" variant=\"solid\"\n      type=\"text\"\n      placeholder=\"Search contacts\"\n      value={filter}\n      onChange={handleInputChange}\n      styles={{width: 250}}/>\n    </div>\n  );\n};\n\nexport default FilterContact;","// contactList.jsx\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContactAsync } from \"redux/contacts/contactSlice\";\nimport Button from '@mui/joy/Button';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const error = useSelector((state) => state.contacts.error);\n  const filter = useSelector((state) => state.filter.filter);\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  const handleDeleteContact = (id) => {\n    dispatch(deleteContactAsync(id));\n  };\n\n  if (error) {\n    return error;\n  }\n  console.log('contacts:', contacts); \n\n  return (\n    <ul\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 10,\n        justifyContent: \"center\"\n      }}\n    >\n      {filteredContacts.map((contact) => (\n        <li key={contact.id} style={{ fontSize: 16 }}>\n          {contact.name}: {contact.number || contact.phone}\n          <Button\n            color=\"neutral\"\n            type=\"button\"\n            style={{ marginLeft: 20, height: 15 }}\n            onClick={() => handleDeleteContact(contact.id)}\n          >\n            Delete contact\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  handleDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContactsThunk } from \"redux/contacts/contactThunk\";\nimport ContactForm from \"components/contactForm\";\nimport FilterContact from \"components/FilterContact\";\nimport ContactList from \"components/ContactList\";\nimport Loader from \"components/Loader\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.contacts.isLoading);\n  \n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <div className=\"general__positioning\">\n      <div className=\"border__style\">\n        <ContactForm />\n      </div>\n\n      <FilterContact />\n\n      {isLoading ? <Loader/> : <ContactList/>}\n    </div>\n  );\n}\n\nexport default Contacts;"],"names":["title","styles","style","dispatch","useDispatch","useState","name","setName","number","setNumber","contacts","useSelector","state","console","log","handleInputChange","event","target","value","className","onSubmit","token","preventDefault","contactExists","some","contact","toLowerCase","alert","test","addContactAsync","fontSize","marginBottom","Input","color","size","variant","type","onChange","pattern","required","Button","marginTop","filter","width","marginLeft","marginRight","textAlign","placeholder","setFilter","error","filteredContacts","includes","display","flexDirection","gap","justifyContent","map","phone","height","onClick","id","deleteContactAsync","isLoading","useEffect","getContactsThunk","Loader"],"sourceRoot":""}